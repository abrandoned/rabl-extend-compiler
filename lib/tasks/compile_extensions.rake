require "digest"
require "stringio"

desc "rewrite the etension from rabl"
task :rewrite_all_extends_in_rabl do
  views_path = ::File.join(::File.dirname(__FILE__), "app", "views")

  ::Dir.glob("#{views_path}/**/*.rabl").each do |rabl_file|
    file_contents = ::File.read(rabl_file)
    new_file_contents = ::StringIO.new

    ##
    # Run through each line and verify the Sha256 digest of the extension file contents
    # against the digest that is already stored in the file that extends
    #
    waiting = false
    waiting_hash = ""
    file_contents.each_line do |file_line|
      if waiting
        waiting = !file_line.include?(waiting_hash) # if we are in a waiting state then we throw the line away
        next
      end

      if file_line.starts_with?("# rabl-extend-compiler extends")
        extension_file = file_line.scan(/\A[[:space:]]*#[[:space:]]+rabl-extend-compiler[[:space:]]*extends[([:space:]]*['"]+([^"]*)['"]+/).flatten.first
        extension_filename = "#{views_path}/#{extension_file}.rabl"
        extension_file_digest = file_line.split("=>").last.gsub(/[[:space:]]/, "")

        if extension_file_digest == ::Digest::SHA256.file(extension_filename).hexdigest
          new_file_contents.puts file_line
        else
          new_file_contents.puts file_line.split("=>").first.gsub("# rabl-extend-compiler ", "")
          waiting = true
          waiting_hash = extension_file_digest
        end
      else
        new_file_contents.puts file_line
      end
    end

    # Replace the file if the contents changed and the following will rewrite it again
    if file_contents != new_file_contents.string
      ::File.write(rabl_file, new_file_contents.string)
    end

    # Rewrite all of the file for extensions
    file_contents = ::File.read(rabl_file)
    new_file_contents = ::StringIO.new
    file_contents.each_line do |file_line|
      extension_file = file_line.scan(/\A[[:space:]]*extends[([:space:]]*['"]+([^"]*)['"]+/).flatten

      if extension_file.empty?
        new_file_contents.puts file_line
        next
      end

      extension_filename = "#{views_path}/#{extension_file.first}.rabl"
      extension_file_digest = ::Digest::SHA256.file(extension_filename).hexdigest
      extension_contents = ::File.read(extension_filename)

      new_file_contents.puts <<~EXTENDS_MESSAGE
      # rabl-extend-compiler #{file_line.chomp} => #{extension_file_digest}
      #
      # This file segment is generated by rabl-extend-compiler rake task
      # and should not be edited. To edit the generated extension
      # edit the file at: #{extension_file.first}
      EXTENDS_MESSAGE

      new_file_contents.puts extension_contents
      new_file_contents.puts "# #{extension_file_digest}"
    end

    # Replace the file if the contents changed and the following will rewrite it again
    if file_contents != new_file_contents.string
      ::File.write(rabl_file, new_file_contents.string)
    end
  end
end
